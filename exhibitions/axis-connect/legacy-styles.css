/* Axis Connect Exhibition Styles */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: radial-gradient(
      circle at 20% 30%,
      rgba(138, 43, 226, 0.3) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 80% 20%,
      rgba(0, 255, 255, 0.2) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 40% 80%,
      rgba(255, 20, 147, 0.2) 0%,
      transparent 50%
    ),
    linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 30%, #16213e 60%, #0f0f23 100%);
  background-attachment: fixed;
  overflow: hidden;
  font-family: "Inter", Arial, sans-serif;
  height: 100vh;
  position: relative;
}

/* Animated background elements */
body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(
      rgba(0, 255, 136, 0.03) 1px,
      transparent 1px
    ),
    linear-gradient(90deg, rgba(0, 255, 136, 0.03) 1px, transparent 1px);
  background-size: 100px 100px;
  animation: gridFlow 30s linear infinite;
  z-index: -1;
}

@keyframes gridFlow {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(100px, 100px);
  }
}

/* Floating particles effect */
body::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(
      2px 2px at 20px 30px,
      rgba(0, 255, 255, 0.3),
      transparent
    ),
    radial-gradient(2px 2px at 40px 70px, rgba(255, 20, 147, 0.3), transparent),
    radial-gradient(1px 1px at 90px 40px, rgba(138, 43, 226, 0.3), transparent),
    radial-gradient(1px 1px at 130px 80px, rgba(0, 255, 136, 0.3), transparent);
  background-repeat: repeat;
  background-size: 200px 200px;
  animation: particleFloat 25s ease-in-out infinite;
  z-index: -1;
}

@keyframes particleFloat {
  0%,
  100% {
    transform: translateY(0px);
    opacity: 0.3;
  }
  50% {
    transform: translateY(-20px);
    opacity: 0.6;
  }
}

#container {
  width: 100%;
  height: 100%;
  position: relative;
}

canvas {
  display: block;
  width: 100% !important;
  height: 100% !important;
  background: transparent;
}

.info {
  position: absolute;
  top: 20px;
  left: 20px;
  color: rgba(255, 255, 255, 0.7);
  font-size: 14px;
  z-index: 100;
  backdrop-filter: blur(10px);
  background: rgba(0, 0, 0, 0.3);
  padding: 10px;
  border-radius: 8px;
}

/* Loading indicator */
.loading {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 18px;
  font-weight: 600;
  color: #00ff88;
  text-transform: uppercase;
  letter-spacing: 2px;
  z-index: 1000;
  opacity: 0;
  animation: fadeInOut 2s ease-in-out;
}

@keyframes fadeInOut {
  0%,
  100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

/* Exhibition header */
.exhibition-header {
  position: absolute;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 100;
  text-align: center;
}

.exhibition-title {
  font-size: 24px;
  font-weight: 800;
  color: #00ff88;
  text-transform: uppercase;
  letter-spacing: 3px;
  margin: 0 0 10px 0;
  text-shadow: 0 0 20px rgba(0, 255, 136, 0.5);
}

.back-button {
  display: inline-block;
  padding: 8px 16px;
  background: rgba(0, 255, 136, 0.1);
  border: 1px solid rgba(0, 255, 136, 0.3);
  color: #00ff88;
  text-decoration: none;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: all 0.3s ease;
}

.back-button:hover {
  background: rgba(0, 255, 136, 0.2);
  border-color: rgba(0, 255, 136, 0.6);
  box-shadow: 0 0 15px rgba(0, 255, 136, 0.3);
}

/* Main content */
.main-content {
  width: 100%;
  height: 100vh;
  position: relative;
}

/* Background grid */
.background-grid {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.1;
  background-image: linear-gradient(rgba(0, 255, 136, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 136, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: gridMove 20s linear infinite;
  z-index: -1;
}

@keyframes gridMove {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(50px, 50px);
  }
}
